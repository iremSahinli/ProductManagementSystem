@model IEnumerable<ManagmentSystem.Presentation.Areas.Admin.Models.UserVMs.AdminUserListVM>

@{
    ViewData["Title"] = "Kullanıcılar";
}
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> Localizer


<br />
<br />
<br />
<br />
<form method="post" asp-controller="AdminUser" asp-action="UpdateLockoutStatus">
    @Html.AntiForgeryToken() <!-- koruma için Antiforgery token -->
</form>

<div class="card">
    <h2 class="users-heading">Users</h2>
    <div style="position: relative;">
        <a asp-action="Create" class="btn btn-success" style="position: absolute; top: -40px; right: 260px;">@Localizer["Create New User"]</a>
    </div>

    <div class="table-responsive">
        <table class="table align-items-center mb-0">
            <thead>
                <tr>

                    <th class="text-secondary text-xxs font-weight-bolder opacity-7 ps-2">@Localizer["FIRST NAME_"]</th>
                    <th class="text-secondary text-xxs font-weight-bolder opacity-7 ps-2">@Localizer["LAST NAME_"]</th>
                    <th class="text-secondary text-xxs font-weight-bolder opacity-7 ps-2">@Localizer["MAIL_"]</th>
                    <th class="text-secondary text-xxs font-weight-bolder opacity-7 ps-2">@Localizer["LOCK OR UNLUCK SWITCH_"]</th>
                    <th class="text-center text-secondary text-xxs font-weight-bolder opacity-7">@Localizer["ACTIONS_"]</th>
                    <th class="text-secondary opacity-7"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="@(item.IsRecordMissing ? "missing-record" : "")">
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td class="@(item.IsRecordMissing ? "missing-record" : "")">
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td class="@(item.IsRecordMissing ? "missing-record" : "")">
                            @Html.DisplayFor(modelItem => item.Mail)
                        </td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="lockoutEnabledSwitch-@item.Id"
                                       data-user-id="@item.Id"
                                @(item.LockoutEnabled ? "checked" : "") />
                                <label class="form-check-label" for="lockoutEnabledSwitch-@item.Id"></label>
                            </div>
                        </td>
                        <td class="text-center">
                            <a href="@Url.Action("Edit", "AdminUser", new { id = item.Id })" class="btn btn-primary">@Localizer["Update"]</a>
                            <a href="@Url.Action("UserDetail", "AdminUser", new { id = item.Id })" class="btn btn-info">@Localizer["Details"]</a>
                            <a href="@Url.Action("Delete", "AdminUser", new { id = item.Id })" class="btn btn-danger">@Localizer["Delete"]</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>




<style>
    .form-check-input {
        width: 80px;
        height: 34px;
    }

        .form-check-input:checked {
            background-color: green;
        }

        .form-check-input:not(:checked) {
            background-color: red;
        }

    .form-check-label {
        display: inline-block;
        width: 60px;
        height: 34px;
        position: relative;
        cursor: pointer;
    }


    .card {
        max-width: 1600px; /* Kartın genişliğini kısalt */
        margin: 0 auto; /* Kartı ortala */
    }

    .table-responsive {
        padding: 10px; /* İç boşluk ekleyerek tabloyu ferahlat */
    }

    .table {
        width: 100%; /* Tablonun tam genişlikte görünmesini sağla */
        /* Tablonun kapsayıcı içinde ortalanmasını sağla */
    }



    th.text-uppercase, td.text-center {
        text-align: left; /* Başlık ve hücre içi hizalamayı sol yap */
    }

    th:not(.form-check-label), td:not(:has(.form-check)) {
        font-size: 12px; /* Tablo içi metin boyutu */
    }

    .btn {
        margin-right: 5px; /* Butonlar arasında boşluk bırak */
    }

    .missing-record {
        color: red; /* Kayıt yapılmadı mesajını kırmızı yapar */
    }

    .users-heading {
        margin-left: 30px; 
    }

</style>

@section Scripts {
    <script>
        document.querySelectorAll('input[type="checkbox"][id^="lockoutEnabledSwitch-"]').forEach(function (element) {
            element.addEventListener('change', function () {
                var userId = this.getAttribute('data-user-id');
                var isEnabled = this.checked;
                var token = $('input[name="__RequestVerificationToken"]').val(); // Antiforgery token

                console.log("Kullanıcı ID: " + userId + " | Kilit Durumu: " + isEnabled);

                $.ajax({
                    url: '/Admin/AdminUser/UpdateLockoutStatus',
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: token,  // Antiforgery token
                        userId: userId,
                        lockoutEnabled: isEnabled
                    },
                    success: function (response) {
                        console.log("Başarılı: Kullanıcı durumu güncellendi.");
                        alert('Kullanıcı durumu başarıyla güncellendi.');
                    },
                    error: function (error) {
                        console.log("Hata:", error);
                        alert('Kullanıcı durumu güncellenirken bir hata oluştu.');
                        element.checked = !isEnabled; // Hata olursa Switch'i eski durumuna geri döndür.
                    }
                });
            });
        });
    </script>
}
